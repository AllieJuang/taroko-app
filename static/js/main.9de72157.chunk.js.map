{"version":3,"sources":["components/contact-card/contact-card.module.scss","components/modal/modal.module.scss","components/input-text/input-text.module.scss","pages/contact-list/contact-list.module.scss","components/form-field/form-field.module.scss","components/header/header.module.scss","components/button/button.module.scss","components/contact-info/contact-info.module.scss","pages/home/home.module.css","constants/app-path.const.ts","components/button/button.tsx","util/api.ts","redux/contact/contact-action-type.ts","redux/contact/contact-reducer.ts","util/redux.ts","components/form-field/form-field.tsx","components/input-text/input-text.tsx","util/validator.ts","components/contact-info/contact-info.tsx","util/form.ts","components/modal/modal.tsx","components/header/header.tsx","components/contact-card/contact-card.tsx","util/media.ts","pages/contact-list/contact-list.tsx","pages/home/home.tsx","App.tsx","redux/root-reducer.ts","redux/store.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","AppPath","Button","className","name","action","disabled","children","type","classnames","styles","button","onClick","generateUrl","path","params","paramsString","qs","stringify","arrayFormat","apiEndpoint","wrapFetch","a","method","options","headers","URL","Headers","Accept","body","JSON","fetch","result","json","ContractActionType","mockData","id","first_name","last_name","job","description","getContacts","createAction","statusCode","data","addContact","contactInfo","dispatch","message","deleteContact","updateContact","reducer","contact","handleActions","GET_CONTACTS_PENDING","state","contactsLoading","GET_CONTACTS_FULFILLED","contacts","payload","GET_CONTACTS_REJECTED","alert","ADD_CONTACT_PENDING","loading","ADD_CONTACT_FULFILLED","ADD_CONTACT_REJECTED","DELETE_CONTACT_PENDING","DELETE_CONTACT_FULFILLED","DELETE_CONTACT_REJECTED","UPDATE_CONTACT_PENDING","UPDATE_CONTACT_FULFILLED","UPDATE_CONTACT_REJECTED","mapHooksToState","contactActionMap","useContact","selector","actions","useSelector","shouldHooksUpdate","useDispatch","boundActions","bindActionCreators","useRedux","FormField","label","required","formField","InputText","onChangeValue","onBlurValue","validators","props","value","types","useState","error","setError","errorMsgCofig","email","errObj","forEach","trim","test","Object","keys","length","map","k","reduce","pre","curr","useValidators","validate","getErrorMsg","firstUpdate","useRef","touched","useEffect","current","inputText","invalid","onChange","e","preventDefault","val","target","onBlur","initialData","firstName","lastName","ContactInfo","close","formObject","setFormObj","key","formData","formRef","querySelectorAll","input","focus","blur","useFormBuilder","handleFormField","updateFormValue","undefined","ref","v","err","btns","some","modalElement","document","getElementById","Modal","forwardRef","fade","defaultOpened","hasBackdrop","disableClose","isOpen","setIsOpen","useCallback","useImperativeHandle","open","handleEscape","event","keyCode","addEventListener","removeEventListener","createPortal","modal","modalFade","modalOverlay","role","modalClose","modalBody","Header","pathname","useLocation","modalRef","header","navi","to","exact","ContactCard","media","mobileMedia","window","matchMedia","tabletMedia","desktopMedia","defaultMedia","matches","setMedia","handleMediaChange","mediaName","mediaHandler","mobileHandler","tabletHandler","desktopHandler","addListener","removeListener","useMedia","openContactModal","contactCard","user","icon","faUser","title","faEdit","faTrash","ContactList","sort","setSort","sortedContacts","useMemo","b","localeCompare","console","log","contactList","list","faSortAlphaDown","faSortAlphaUp","Home","home","App","combineReducers","middleWares","logger","promiseMiddleware","thunkMiddleware","store","createStore","rootReducer","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9de72157.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactCard\":\"contact-card_contactCard__3aZI5\",\"user\":\"contact-card_user__2ebcX\",\"title\":\"contact-card_title__t0RIJ\",\"btns\":\"contact-card_btns__IEyis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2bhYs\",\"modalFade\":\"modal_modalFade__2afTT\",\"fade-in\":\"modal_fade-in__1y9J-\",\"modalOverlay\":\"modal_modalOverlay__1I_zq\",\"modalClose\":\"modal_modalClose__3_-55\",\"modalBody\":\"modal_modalBody__14dLr\",\"loading\":\"modal_loading__2ds0Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"input-text_inputText__2t8VG\",\"invalid\":\"input-text_invalid__3gPE-\",\"small\":\"input-text_small__kn-Gl\",\"error\":\"input-text_error__3_WQe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contact-list_contactList__2pqEQ\",\"loading\":\"contact-list_loading__2f9In\",\"list\":\"contact-list_list__1FYra\",\"sort\":\"contact-list_sort__3WC1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formField\":\"form-field_formField__3-23z\",\"label\":\"form-field_label__36nNB\",\"required\":\"form-field_required__3N-hT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3wy06\",\"navi\":\"header_navi__1dTxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\",\"primary\":\"button_primary__3C1qu\",\"secondary\":\"button_secondary__1yQBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInfo\":\"contact-info_contactInfo__1eWzW\",\"btns\":\"contact-info_btns__1Z-Lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home_home__rJ9X6\"};","export const AppPath = {\n\thome: '/taroko-app/',\n\tcontacts: '/taroko-app/contacts',\n};\n","import classnames from 'classnames';\nimport React, { InputHTMLAttributes } from 'react';\nimport styles from './button.module.scss';\n\n\ninterface ButtonProperty extends InputHTMLAttributes<HTMLButtonElement> {\n\tname: string;\n\taction: () => void;\n\tclassName: 'primary' | 'secondary';\n}\n\nconst Button: React.FC<ButtonProperty> = ({\n\tclassName = 'primary',\n\tname,\n\taction,\n\tdisabled,\n\tchildren,\n}) => (\n\t<button\n\t\ttype=\"button\"\n\t\tclassName={classnames(styles.button, styles[className])}\n\t\tonClick={action}\n\t\tdisabled={disabled}\n\t>\n\t\t{name}\n\t\t{children}\n\t</button>\n);\n\nexport default Button;\n","import qs from 'qs';\n\nexport const generateUrl = (path: string, params?: object) => {\n\tconst paramsString = qs.stringify(params, { arrayFormat: 'brackets' });\n\tconst apiEndpoint = 'https://taroko-contacts-server.herokuapp.com';\n\n\tconst URL =\n\t\tparamsString !== '' ? `${apiEndpoint}/${path}?${paramsString}` : `${apiEndpoint}/${path}`;\n\n\treturn URL;\n};\n\ntype RequestMethod = 'GET' | 'POST' | 'PUT' | 'DELETE';\n\nexport const wrapFetch = async (\n\tpath: string,\n\tmethod: RequestMethod = 'POST',\n\toptions = { headers: {} },\n\tparams = {},\n) => {\n\tconst URL = generateUrl(path, method !== 'POST' ? params : '');\n\tconst headers = new Headers({\n\t\t'Content-Type': 'application/json',\n\t\tAccept: 'application/json',\n\t\t...options.headers,\n\t});\n\n\tconst body = method !== 'POST' ? null : JSON.stringify(params);\n\n\tconst result = await fetch(URL, { ...options, headers, method, body });\n\n\treturn result.json();\n};\n","export const ContractActionType = {\n\tGET_CONTACTS: 'GET_CONTACTS',\n\tUPDATE_CONTACT: 'UPDATE_CONTACT',\n\tADD_CONTACT: 'ADD_CONTACT',\n\tDELETE_CONTACT: 'DELETE_CONTACT',\n};\n","import { Dispatch } from 'react';\nimport { Action, createAction, handleActions } from 'redux-actions';\nimport { ContactCardProperty } from '../../components/contact-card/contact-card';\nimport { wrapFetch } from '../../util/api';\nimport { useRedux } from '../../util/redux';\nimport { State as GlobalState } from '../root-reducer';\nimport { ContractActionType } from './contact-action-type';\n\nconst mockData = [\n\t{\n\t\tid: '1',\n\t\tfirst_name: 'Allie',\n\t\tlast_name: 'Juang',\n\t\tjob: 'Front-end Developer',\n\t\tdescription: 'Front-end Developer',\n\t},\n\t{\n\t\tid: '2',\n\t\tfirst_name: 'Jack',\n\t\tlast_name: 'Hung',\n\t\tjob: 'Back-end Developer',\n\t\tdescription: 'Back-end Developer',\n\t},\n\t{\n\t\tid: '3',\n\t\tfirst_name: 'Leo',\n\t\tlast_name: 'Lin',\n\t\tjob: 'QA Engineer',\n\t\tdescription: 'QA Engineer',\n\t},\n\t{\n\t\tid: '4',\n\t\tfirst_name: 'Joe',\n\t\tlast_name: 'Chan',\n\t\tjob: 'PM',\n\t\tdescription: 'PMPMPMPMPMPMPMPMPMPMPMPMPMPMPMPMPMPMPM',\n\t},\n\t{\n\t\tid: '5',\n\t\tfirst_name: 'Eva',\n\t\tlast_name: 'Chang',\n\t\tjob: 'PM',\n\t\tdescription: 'PMPMPMPMPMPMPMPMPMPMPMPMPMPMPMPMPMPMPM',\n\t}\n]\n\n\nexport interface State {\n\tcontacts: ContactCardProperty[];\n\tcontactsLoading: boolean;\n\tloading: boolean;\n}\n\nconst initialState: State = {\n\tcontacts: [],\n\tcontactsLoading: false,\n\tloading: false,\n};\n\nexport const getContacts = createAction(ContractActionType.GET_CONTACTS, () => async () => {\n\tconst { statusCode, data } = await wrapFetch('api/contacts', 'GET');\n\tif (statusCode !== 200) {\n\t\treturn [];\n\t}\n\treturn data;\n});\n\nexport const addContact = createAction(ContractActionType.ADD_CONTACT, (contactInfo: ContactCardProperty) => async (dispatch: Dispatch<any>) => {\n\tconst { statusCode, message } = await wrapFetch('api/contacts', 'POST', { headers: {}},  contactInfo);\n\tif (statusCode === 201) {\n\t\tdispatch(getContacts());\n\t}\n});\n\nexport const deleteContact = createAction(ContractActionType.DELETE_CONTACT, (id: string) => async (dispatch: Dispatch<any>) => {\n\tconst { statusCode, message } = await wrapFetch('api/contacts', 'DELETE', { headers: {}},  {id});\n\tif (statusCode === 200) {\n\t\tdispatch(getContacts());\n\t}\n});\n\nexport const updateContact = createAction(ContractActionType.UPDATE_CONTACT, (contactInfo: ContactCardProperty) => async (dispatch: Dispatch<any>) => {\n\tconst { statusCode, message } = await wrapFetch('api/contacts', 'PUT', { headers: {}},  contactInfo);\n\tif (statusCode === 200) {\n\t\tdispatch(getContacts());\n\t}\n});\n\nexport const reducer = {\n\tcontact: handleActions<State, any>(\n\t\t{\n\t\t\tGET_CONTACTS_PENDING: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tcontactsLoading: true,\n\t\t\t}),\n\t\t\tGET_CONTACTS_FULFILLED: (state: State, action: Action<ContactCardProperty[]>) => ({\n\t\t\t\t...state,\n\t\t\t\tcontacts: action.payload,\n\t\t\t\tcontactsLoading: false,\n\t\t\t}),\n\t\t\tGET_CONTACTS_REJECTED: (state: State) => {\n\t\t\t\talert(`Server Error. So Display Mock Data`)\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcontacts: mockData,\n\t\t\t\t\tcontactsLoading: false,\n\t\t\t\t};\n\t\t\t},\n\t\t\tADD_CONTACT_PENDING: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t}),\n\t\t\tADD_CONTACT_FULFILLED: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t}),\n\t\t\tADD_CONTACT_REJECTED: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t}),\n\t\t\tDELETE_CONTACT_PENDING: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t}),\n\t\t\tDELETE_CONTACT_FULFILLED: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t}),\n\t\t\tDELETE_CONTACT_REJECTED: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t}),\n\t\t\tUPDATE_CONTACT_PENDING: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t}),\n\t\t\tUPDATE_CONTACT_FULFILLED: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t}),\n\t\t\tUPDATE_CONTACT_REJECTED: (state: State) => ({\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t}),\n\t\t},\n\t\tinitialState,\n\t),\n};\n\nconst mapHooksToState = (state: GlobalState) => state.contact;\n\nconst contactActionMap = {\n\tgetContacts,\n\taddContact,\n\tdeleteContact,\n\tupdateContact,\n};\n\nexport const useContact = () => useRedux(mapHooksToState, contactActionMap);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ActionCreatorsMapObject, bindActionCreators } from 'redux';\nimport { State } from '../redux/root-reducer';\n\ntype Selector<ReturnState> = (s: State) => ReturnState;\n\ninterface Option {\n\tshouldHooksUpdate?: (left: unknown, right: unknown) => boolean;\n}\n\ninterface DefaultActionMap {\n\t[key: string]: (...params: any[]) => void;\n}\n\ntype WrapActionDispatch<ActionMap extends DefaultActionMap> = {\n\t[key in keyof ActionMap]: (...params: Parameters<ActionMap[key]>) => void;\n};\n\nexport const useRedux = <ReturnState, ActionMap extends DefaultActionMap>(\n\tselector: Selector<ReturnState>,\n\tactions: ActionCreatorsMapObject,\n\toptions: Option = {},\n): [ReturnState, WrapActionDispatch<ActionMap>] => {\n\tconst state = useSelector(selector, options.shouldHooksUpdate);\n\tconst dispatch = useDispatch();\n\n\t// 強制轉型\n\tconst boundActions = bindActionCreators(actions, dispatch) as unknown;\n\n\treturn [state, boundActions as WrapActionDispatch<ActionMap>];\n};\n","import classnames from 'classnames';\nimport React from 'react';\nimport styles from './form-field.module.scss';\n\n\ninterface FormFieldProperty {\n\tlabel: string;\n\trequired: boolean;\n\tchildren: React.ReactNode;\n}\n\nconst FormField: React.FC<FormFieldProperty> = ({ label, required, children }) => (\n\t<div className={classnames(styles.formField)}>\n\t\t<div className={classnames(styles.label)}>\n\t\t\t<span>{label}</span>\n\t\t\t{required && <span className={classnames(styles.required)}>*</span>}\n\t\t</div>\n\t\t<>{children}</>\n\t</div>\n);\n\nexport default FormField;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport classnames from 'classnames';\nimport React, { InputHTMLAttributes, useEffect, useRef } from 'react';\nimport { FormError, useValidators, ValidatorType } from '../../util/validator';\nimport styles from './input-text.module.scss';\n\n\n\ninterface InputTextProperty extends InputHTMLAttributes<HTMLInputElement> {\n\tvalidators?: ValidatorType[];\n\tclassName?: string;\n\tonChangeValue?: (v: string, error: FormError) => void;\n\tonBlurValue?: (v: string) => void;\n}\n\nconst InputText: React.FC<InputTextProperty> = ({\n\tclassName = '',\n\tonChangeValue = () => {},\n\tonBlurValue = () => {},\n\tvalidators = [],\n\t...props\n}) => {\n\tconst { type = 'text', value } = props;\n\tconst [error, validate, getErrorMsg] = useValidators(validators, value as string);\n\tconst firstUpdate = useRef(true);\n\tconst touched = useRef(false);\n\n\tconst handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\te.preventDefault();\n\t\tconst val = e.target.value ? e.target.value : '';\n\t\tonChangeValue(val, null);\n\t};\n\n\tuseEffect(() => {\n\t\tif (firstUpdate.current) {\n\t\t\tfirstUpdate.current = false;\n\t\t\treturn;\n\t\t}\n\t\tif (touched.current) {\n\t\t\tvalidate();\n\t\t}\n\t}, [value]);\n\n\tuseEffect(() => {\n\t\tonChangeValue(value as string, error);\n\t}, [error]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classnames(styles.inputText, styles[className], {\n\t\t\t\t[styles.invalid]: error,\n\t\t\t})}\n\t\t>\n\t\t\t<input\n\t\t\t\t{...props}\n\t\t\t\ttype={type}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t\tonBlur={() => {\n\t\t\t\t\tvalidate();\n\t\t\t\t\ttouched.current = true;\n\t\t\t\t\tonBlurValue(value as string);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className={classnames(styles.error)}>\n\t\t\t\t<span>{getErrorMsg()}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default InputText;\n","/* eslint-disable indent */\nimport { useState } from 'react';\n\nexport type ValidatorType = 'required' | 'email';\n\nexport type FormError = Error | null;\n\ninterface Error {\n\t[key: string]: string;\n}\n\ntype useValidatorsFunc = (\n\ttypes: ValidatorType[],\n\tvalue: string,\n) => [FormError, () => void, () => string];\n\nexport const useValidators: useValidatorsFunc = (types: ValidatorType[], value: string) => {\n\tconst [error, setError] = useState<FormError>(null);\n\tconst errorMsgCofig = {\n\t\trequired: 'This field is required',\n\t\temail: 'The email format is wrong',\n\t};\n\n\tconst validate = () => {\n\t\tsetError(() => null);\n\t\tlet errObj = {};\n\n\t\ttypes.forEach(type => {\n\t\t\tif (type === 'required' && !value.trim()) {\n\t\t\t\terrObj = { [type]: errorMsgCofig[type] };\n\t\t\t} else if (type === 'email') {\n\t\t\t\tconst emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n\t\t\t\tif (!emailRegex.test(value)) {\n\t\t\t\t\terrObj = { ...errObj, ...{ [type]: errorMsgCofig[type] } };\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tsetError(() => (Object.keys(errObj).length > 0 ? errObj : null));\n\t};\n\n\tconst getErrorMsg = () =>\n\t\ttypeof error === 'object' && error !== null\n\t\t\t? Object.keys(error)\n\t\t\t\t\t.map(k => error[k])\n\t\t\t\t\t.reduce((pre, curr) => `${pre}、${curr}`)\n\t\t\t: '';\n\n\treturn [error, validate, getErrorMsg];\n};\n","import classnames from 'classnames';\nimport React, { useEffect, useRef } from 'react';\nimport { useContact } from '../../redux/contact/contact-reducer';\nimport { FormFieldObject, useFormBuilder } from '../../util/form';\nimport Button from '../button/button';\nimport { ContactCardProperty } from '../contact-card/contact-card';\nimport FormField from '../form-field/form-field';\nimport InputText from '../input-text/input-text';\nimport styles from './contact-info.module.scss';\n\ninterface ContactInfo<T> {\n  [key: string]: T;\n}\n\nconst initialData: ContactInfo<FormFieldObject> = {\n\tfirstName: { value: '', error: null },\n\tlastName: { value: '', error: null },\n  job: { value: '', error: null },\n\tdescription: { value: '', error: null },\n};\n\ninterface ContactInfoProperty {\n  id?: string;\n  firstName?: string;\n  lastName?: string;\n  job?: string;\n  description?: string;\n  close: () => void;\n}\n\n\nconst ContactInfo: React.FC<ContactInfoProperty> = (\n  {\n    id, firstName, lastName, job, description,\n    close = () => {},\n  }\n) => {\n  const [{ loading }, { addContact, updateContact }] = useContact();\n  const [formObject, handleFormField, updateFormValue] = useFormBuilder<ContactInfo<FormFieldObject>>(\n\t\tinitialData,\n\t);\n\tconst formRef = useRef<HTMLFormElement | null>(null);\n\n  const submit = () => {\n    if (formRef.current) {\n\t\t\tconst inputs = formRef.current.querySelectorAll('input');\n\t\t\tinputs.forEach(input => {\n\t\t\t\tinput.focus();\n\t\t\t\tinput.blur();\n\t\t\t});\n\t\t}\n\n    const invalid = Object.keys(formObject).map(key => formObject[key].error).some(err => err);\n    if (invalid) {\n      return;\n    }\n    \n    const formVal = Object.keys(formObject).map(\n        key => ({[key]: formObject[key].value})\n      ).reduce((pre, curr) => ({ ...pre, ...curr }));\n    const { firstName, lastName, job, description } = formVal as ContactInfo<string>;\n    const params: ContactCardProperty = {\n      first_name: firstName,\n      last_name: lastName,\n      job,\n      description,\n    }\n\n    if (id !== undefined) {\n      updateContact({...params, id })\n    } else {\n      addContact(params);\n    }\n  }\n\n  useEffect(() => {\n    if (id !== undefined) {\n      updateFormValue(\n        {\n          firstName: { value: firstName || '', error: null },\n          lastName: { value: lastName || '', error: null },\n          job: { value: job || '', error: null },\n          description: { value: description || '', error: null },\n        }\n      )\n    }\n\n  }, [id]);\n  \n  return (\n    <div className={classnames(styles.contactInfo)}>\n      <form ref={formRef}>\n        <FormField label=\"First Name\" required>\n          <InputText\n            key=\"firstName\"\n            value={formObject.firstName.value as string}\n            validators={['required']}\n            onChangeValue={(v, err) => handleFormField('firstName', v, err)}\n          />\n        </FormField>\n        <FormField label=\"Last Name\" required>\n          <InputText\n            key=\"lastName\"\n            value={formObject.lastName.value as string}\n            validators={['required']}\n            onChangeValue={(v, err) => handleFormField('lastName', v, err)}\n          />\n        </FormField>\n        <FormField label=\"Job\" required>\n          <InputText\n            key=\"job\"\n            value={formObject.job.value as string}\n            validators={['required']}\n            onChangeValue={(v, err) => handleFormField('job', v, err)}\n          />\n        </FormField>\n        <FormField label=\"Description\" required>\n          <InputText\n            key=\"description\"\n            value={formObject.description.value as string}\n            validators={['required']}\n            onChangeValue={(v, err) => handleFormField('description', v, err)}\n          />\n        </FormField>\n        <div className={classnames(styles.btns)}>\n          <Button name=\"Cancel\" className=\"secondary\" action={close} />\n\t\t\t\t\t<Button name=\"Submit\" className=\"primary\" action={submit} />\n\t\t\t\t</div>\n      </form>\n    </div>\n  )\n};\n\nexport default ContactInfo;\n","import { useState } from 'react';\nimport { FormError } from './validator';\n\nexport type FormFieldValue = string | number;\n\nexport interface FormObject {\n\t[key: string]: FormFieldObject;\n}\n\nexport interface FormFieldObject {\n\tvalue: FormFieldValue;\n\terror: FormError;\n}\n\nexport interface FormRawData {\n\t[key: string]: unknown;\n}\n\ntype useFormBuilderFunc = <T>(\n\tinitialData: T,\n) => [\n\tT,\n\t(key: string, value: FormFieldValue, error?: FormError) => void,\n\t(value: T) => void,\n\t(formEl: React.RefObject<HTMLFormElement>) => void,\n];\n\nexport const useFormBuilder: useFormBuilderFunc = <T>(initialData: T) => {\n\tconst [formObject, setFormObj] = useState<T>(initialData);\n\n\tconst updateFormValue = (formData: T) => setFormObj(pre => ({ ...pre, ...formData }));\n\n\tconst handleFormField = (key: string, value: FormFieldValue, error: FormError = null) => {\n\t\tsetFormObj(pre => ({ ...pre, ...{ [key]: { value, error } } }));\n\t};\n\n\tconst makeFormAsTouched = (formRef: React.RefObject<HTMLFormElement>) => {\n\t\tif (formRef.current) {\n\t\t\tconst inputs = formRef.current.querySelectorAll('input');\n\t\t\tinputs.forEach(input => {\n\t\t\t\tinput.focus();\n\t\t\t\tinput.blur();\n\t\t\t});\n\t\t}\n\t};\n\n\treturn [formObject, handleFormField, updateFormValue, makeFormAsTouched];\n};\n","/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport classnames from 'classnames';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport styles from './modal.module.scss';\n\n\nconst modalElement = document.getElementById('modal-root') as HTMLElement;\n\ninterface ModalProperty {\n\tclassName?: string;\n\tchildren: React.ReactNode;\n\tfade?: boolean;\n\tdefaultOpened?: boolean;\n\thasBackdrop?: boolean;\n\tdisableClose?: boolean;\n}\n\ninterface ModalHandle {\n\topen: () => void;\n\tclose: () => void;\n}\n\nconst Modal = forwardRef<ModalHandle, ModalProperty>(\n\t(\n\t\t{\n\t\t\tclassName = '',\n\t\t\tchildren,\n\t\t\tfade = true,\n\t\t\tdefaultOpened = false,\n\t\t\thasBackdrop = false,\n\t\t\tdisableClose = true,\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst [isOpen, setIsOpen] = useState(defaultOpened);\n\t\tconst close = useCallback(() => setIsOpen(false), []);\n\n\t\tuseImperativeHandle(ref, () => ({ open: () => setIsOpen(true), close }), [close]);\n\n\t\tconst handleEscape = useCallback(\n\t\t\tevent => {\n\t\t\t\tif (event.keyCode === 27) close();\n\t\t\t},\n\t\t\t[close],\n\t\t);\n\n\t\tuseEffect(() => {\n\t\t\tif (isOpen) document.addEventListener('keydown', handleEscape, false);\n\t\t\treturn () => {\n\t\t\t\tdocument.removeEventListener('keydown', handleEscape, false);\n\t\t\t};\n\t\t}, [handleEscape, isOpen]);\n\n\t\treturn createPortal(\n\t\t\tisOpen ? (\n\t\t\t\t<div className={classnames(styles.modal, styles[className], { [styles.modalFade]: fade })}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classnames(styles.modalOverlay)}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (hasBackdrop) {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{!disableClose && (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\tclassName={classnames(styles.modalClose)}\n\t\t\t\t\t\t\taria-label=\"close\"\n\t\t\t\t\t\t\tonClick={close}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tx\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className={classnames(styles.modalBody)}>{children}</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<></>\n\t\t\t),\n\t\t\tmodalElement,\n\t\t);\n\t},\n);\n\nexport default Modal;\n","import React, { useRef } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { AppPath } from '../../constants/app-path.const';\nimport Button from '../button/button';\nimport ContactInfo from '../contact-info/contact-info';\nimport Modal from '../modal/modal';\nimport styles from './header.module.scss';\n\n\nconst Header: React.FC<{}> = () => {\n  const { pathname } = useLocation();\n  const modalRef = useRef(null);\n  \n  const openContactModal = () => {\n    if (modalRef.current) {\n\t\t\t(modalRef.current as any).open();\n\t\t}\n  };\n  return (\n    <div className={styles.header}>\n      <div>\n        {\n          pathname === AppPath.home ? (\n            <NavLink className={styles.navi} to={AppPath.contacts} exact>Home Page</NavLink>\n          ) : (\n            <NavLink className={styles.navi} to={AppPath.home} exact>Contact List</NavLink>\n          )\n        }\n      </div>\n        {\n          pathname === AppPath.contacts && (\n            <Button name=\"Add Contact\" className=\"primary\" action={openContactModal} />\n          )\n        }\n      <Modal ref={modalRef}>\n\t\t\t\t<ContactInfo close={() => {\n          if (modalRef.current) {\n            (modalRef.current as any).close();\n          }\n        }} />\n\t\t\t</Modal>\n    </div>\n  );\n};\n\nexport default Header;\n","import { faEdit, faTrash, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useRef } from 'react';\nimport { useContact } from '../../redux/contact/contact-reducer';\nimport { useMedia } from '../../util/media';\nimport Button from '../button/button';\nimport ContactInfo from '../contact-info/contact-info';\nimport Modal from '../modal/modal';\nimport styles from './contact-card.module.scss';\n\nexport interface ContactCardProperty {\n  id?: string;\n  first_name: string;\n  last_name: string;\n  job: string;\n  description: string;\n}\n\nconst ContactCard: React.FC<ContactCardProperty> = ({ id, first_name, last_name, job, description }) => {\n  const [{ loading }, { deleteContact }] = useContact();\n  const media = useMedia();\n\n  const modalRef = useRef(null);\n  \n  const openContactModal = () => {\n    if (modalRef.current) {\n\t\t\t(modalRef.current as any).open();\n\t\t}\n  };\n\n  return (\n    <div className={styles.contactCard}>\n      <div className={styles.user}>\n        <FontAwesomeIcon icon={faUser} />\n        <span>{ last_name } { first_name}</span>\n      </div>\n      <ul>\n        <li>\n          <span className={styles.title}>Job</span>\n          <span className={styles.value}>{ job }</span>\n        </li>\n        <li>\n          <span className={styles.title}>Description</span>\n          <span className={styles.value}>{ description }</span>\n        </li>\n      </ul>\n      <div className={styles.btns}>\n        {media !== 'mobile' ? (\n          <>\n            <Button name=\"Edit\" className=\"primary\" action={() => openContactModal()} />\n            <Button name=\"Delete\" className=\"secondary\" action={() => deleteContact(id)} />\n          </>\n        ) : (\n          <>\n            <FontAwesomeIcon icon={faEdit}  onClick={() => openContactModal()} />\n            <FontAwesomeIcon icon={faTrash} onClick={() => deleteContact(id)} />\n          </>\n        )}\n      </div>\n      <Modal ref={modalRef}>\n\t\t\t\t<ContactInfo \n          id={id} \n          firstName={first_name} \n          lastName={last_name} \n          job={job} \n          description={description} \n          close={() => {\n            if (modalRef.current) {\n              (modalRef.current as any).close();\n            }\n        }} />\n\t\t\t</Modal>\n    </div>\n  );\n};\n\nexport default ContactCard;","import { useEffect, useState } from \"react\";\n\ntype Media = 'desktop' | 'mobile' | 'tablet';\n\nexport const useMedia = () => {\n\tconst mobileMedia = window.matchMedia('(max-width: 799px)');\n\tconst tabletMedia = window.matchMedia('(max-width: 1279px) and (min-width: 800px)');\n\tconst desktopMedia = window.matchMedia('(min-width: 1280px)');\n\n\tlet defaultMedia: Media = 'desktop';\n\n\tif (mobileMedia.matches) {\n\t\tdefaultMedia = 'mobile';\n\t}\n\n\tif (tabletMedia.matches) {\n\t\tdefaultMedia = 'tablet';\n\t}\n\n\tconst [media, setMedia] = useState(defaultMedia);\n\n\tconst handleMediaChange = (mediaName: Media) => (mediaHandler: MediaQueryListEventInit) => {\n\t\tif (mediaHandler.matches && mediaName !== media) {\n\t\t\tsetMedia(mediaName);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst mobileHandler = handleMediaChange('mobile');\n\t\tconst tabletHandler = handleMediaChange('tablet');\n\t\tconst desktopHandler = handleMediaChange('desktop');\n\n\t\tmobileMedia.addListener(mobileHandler);\n\t\ttabletMedia.addListener(tabletHandler);\n\t\tdesktopMedia.addListener(desktopHandler);\n\n\t\treturn () => {\n\t\t\tmobileMedia.removeListener(mobileHandler);\n\t\t\ttabletMedia.removeListener(tabletHandler);\n\t\t\tdesktopMedia.removeListener(desktopHandler);\n\t\t};\n\t}, [media]);\n\n\treturn media;\n};","import { faSortAlphaDown, faSortAlphaUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport ContactCard from '../../components/contact-card/contact-card';\nimport { useContact } from '../../redux/contact/contact-reducer';\nimport styles from './contact-list.module.scss';\n\ntype sortType = 'ASC' | 'DESC'\n\nconst ContactList: React.FC<{}> = () => {\n  const [{ contactsLoading:loading, contacts }, { getContacts }] = useContact();\n  const [sort, setSort] = useState<sortType>('ASC');\n  const sortedContacts = useMemo(() => contacts.sort(\n    (a, b) => sort === 'ASC' ? \n      a.first_name.localeCompare(b.first_name) :\n      b.first_name.localeCompare(a.first_name)\n  ), [sort, contacts]);\n\n  useEffect(() => {\n    console.log(123)\n    getContacts();\n  }, []);\n\n  return (\n    <div className={styles.contactList}>\n      <h1>Contacts</h1>\n      {loading ? (\n        <div className={styles.loading}>Loading...</div>\n      ) : (\n        <>\n          <div className={styles.list}>\n            {sortedContacts.map(contact => <ContactCard key={contact.id} {...contact} />)}\n          </div>\n          <FontAwesomeIcon icon={ sort === 'ASC'? faSortAlphaDown : faSortAlphaUp } className={styles.sort} onClick={() => {\n            const action = sort === 'ASC' ? 'DESC' : 'ASC';\n            setSort(action);\n          }} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styles from './home.module.css';\n\nconst Home: React.FC<{}> = () => (\n  <div className={styles.home}>\n    <h1>This is Home Page : )</h1>\n    <p>Click Home Page on top-left to Contact List.  </p>\n  </div>\n);\n\nexport default Home;","import { Route, Switch } from 'react-router-dom';\nimport Header from './components/header/header';\nimport { AppPath } from './constants/app-path.const';\nimport ContactList from './pages/contact-list/contact-list';\nimport Home from './pages/home/home';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path={AppPath.home}>\n          <Home />\n        </Route>\n        <Route path={AppPath.contacts}>\n          <ContactList />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport * as contact from './contact/contact-reducer';\n\nexport interface State {\n\tcontact: contact.State;\n}\n\nexport type GetState = () => State;\n\nexport default combineReducers<State>({\n\t...contact.reducer,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk-fsa';\nimport rootReducer from './root-reducer';\n\nconst middleWares = [logger, promiseMiddleware, thunkMiddleware];\nconst store = createStore(rootReducer, applyMiddleware(...middleWares));\n\nexport type StoreTypes = ReturnType<typeof rootReducer>;\n\nexport default store;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}